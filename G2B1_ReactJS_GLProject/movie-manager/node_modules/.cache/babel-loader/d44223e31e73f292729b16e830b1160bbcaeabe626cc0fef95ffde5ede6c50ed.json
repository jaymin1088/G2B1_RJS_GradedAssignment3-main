{"ast":null,"code":"var _jsxFileName = \"/home/jaimin/Pictures/G2B1_RJS_GradedAssignment3-main/G1_ReactJS_glProject3/movie-manager/src/components/MovieLists.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Movies(props) {\n  _s();\n  const FavouriteComponent = props.favouriteComponent;\n  const allMovies = Array.from(props.movies);\n  let [favourites, setFavourites] = useState([]);\n  if (props.movies == \"\") {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Movies found in the Section.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: allMovies.map((movie, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: `/view_movie/${movie.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"posterImg\",\n              src: movie.posterurl,\n              alt: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 6\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => props.handleFavouritesClick(movie),\n            className: \"overlay d-flex align-items-center justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(FavouriteComponent, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 5\n        }, this)\n      }, void 0, false))\n    }, void 0, false);\n  }\n}\n_s(Movies, \"yqnmRAiIiqRtLBg6+KCLw1XAHCQ=\");\n_c = Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Movies","props","_s","FavouriteComponent","favouriteComponent","allMovies","Array","from","movies","favourites","setFavourites","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","index","className","href","id","src","posterurl","alt","title","onClick","handleFavouritesClick","_c","$RefreshReg$"],"sources":["/home/jaimin/Pictures/G2B1_RJS_GradedAssignment3-main/G1_ReactJS_glProject3/movie-manager/src/components/MovieLists.tsx"],"sourcesContent":["import { url } from 'inspector';\r\nimport React, { useState } from 'react';\r\n\r\n\r\nexport default function Movies(props:any) {\r\n\tconst FavouriteComponent = props.favouriteComponent;\r\n\tconst allMovies = Array.from(props.movies); \r\n\tlet [favourites, setFavourites] = useState< movieObject[]>([]);\r\n\ttype movieObject={\r\n\t\tid:string,\r\n\t\ttitle:string,\r\n\t\tyear:string,\r\n\t\tgenres: string[],\r\n\t\tratings:  number[],\r\n\t\tposter:string,\r\n\t\tcontentRating: string,\r\n\t\tduration: string,\r\n\t\treleaseDate: string,\r\n\t\taverageRating: number,\r\n\t\toriginalTitle: string,\r\n\t\tstoryline: string,\r\n\t\tactors:  string[],\r\n\t\timdbRating: number|string,\r\n\t\tposterurl: string,\r\n\t\r\n\t  };\r\n\r\n\tif(props.movies==\"\"){\r\n\t\treturn(\r\n\t\t\t<p>\r\n\t\t\tNo Movies found in the Section.\r\n\t\t\t</p>\r\n\t);\r\n\t}else{\r\n\treturn (\r\n\t\t\r\n\t\t<>\r\n\t\t{allMovies.map((movie:any, index:any) => (\r\n\t\t\t<>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\t<div className='image-container'>\r\n\t\t\t\t\t<a href={`/view_movie/${movie.id}`} >\r\n\t\t\t\t\t<img id='posterImg' src={movie.posterurl} alt={movie.title}></img>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tonClick={() =>props.handleFavouritesClick(movie)}\r\n\t\t\t\t\t\tclassName='overlay d-flex align-items-center justify-content-center'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FavouriteComponent />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</>\t\r\n\t\t\t))}\r\n\t\t\t\r\n\t\t</>\r\n\t);\r\n}\r\n}"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGxC,eAAe,SAASC,MAAMA,CAACC,KAAS,EAAE;EAAAC,EAAA;EACzC,MAAMC,kBAAkB,GAAGF,KAAK,CAACG,kBAAkB;EACnD,MAAMC,SAAS,GAAGC,KAAK,CAACC,IAAI,CAACN,KAAK,CAACO,MAAM,CAAC;EAC1C,IAAI,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAiB,EAAE,CAAC;EAoB9D,IAAGM,KAAK,CAACO,MAAM,IAAE,EAAE,EAAC;IACnB,oBACCX,OAAA;MAAAc,QAAA,EAAG;IAEH;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAEN,CAAC,MAAI;IACL,oBAEClB,OAAA,CAAAE,SAAA;MAAAY,QAAA,EACCN,SAAS,CAACW,GAAG,CAAC,CAACC,KAAS,EAAEC,KAAS,kBACnCrB,OAAA,CAAAE,SAAA;QAAAY,QAAA,eAGCd,OAAA;UAAKsB,SAAS,EAAC,iBAAiB;UAAAR,QAAA,gBAC/Bd,OAAA;YAAGuB,IAAI,EAAG,eAAcH,KAAK,CAACI,EAAG,EAAE;YAAAV,QAAA,eACnCd,OAAA;cAAKwB,EAAE,EAAC,WAAW;cAACC,GAAG,EAAEL,KAAK,CAACM,SAAU;cAACC,GAAG,EAAEP,KAAK,CAACQ;YAAM;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/D,CAAC,eACJlB,OAAA;YACC6B,OAAO,EAAEA,CAAA,KAAKzB,KAAK,CAAC0B,qBAAqB,CAACV,KAAK,CAAE;YACjDE,SAAS,EAAC,0DAA0D;YAAAR,QAAA,eAEpEd,OAAA,CAACM,kBAAkB;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEF;MAAC,gBACL,CACD;IAAC,gBAED,CAAC;EAEL;AACA;AAACb,EAAA,CAvDuBF,MAAM;AAAA4B,EAAA,GAAN5B,MAAM;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}