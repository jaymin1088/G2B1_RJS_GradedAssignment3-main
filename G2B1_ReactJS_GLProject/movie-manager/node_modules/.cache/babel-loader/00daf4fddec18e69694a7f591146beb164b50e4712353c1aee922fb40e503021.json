{"ast":null,"code":"var _jsxFileName = \"/home/jaimin/Pictures/G2B1_RJS_GradedAssignment3-main/G1_ReactJS_glProject3/movie-manager/src/components/SearchComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchComponent = props => {\n  _s();\n  const [searchValue, setSearchValue] = useState('');\n  const [isValid, setIsValid] = useState(true);\n  const handleSearch = () => {\n    // Perform validation here\n    if (searchValue.trim() === '') {\n      setIsValid(false);\n    } else {\n      // Reset validation state\n      setIsValid(true);\n      // Pass the search value to the parent component\n      props.handleSearch(searchValue);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"searchBar\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"search\",\n        placeholder: \"Search\",\n        className: `me-2 ${isValid ? '' : 'is-invalid'}`,\n        \"aria-label\": \"Search\",\n        value: searchValue,\n        onChange: event => {\n          setSearchValue(event.target.value);\n          setIsValid(true); // Reset validation state on input change\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"dark\",\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), !isValid && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n        type: \"invalid\",\n        children: \"Please enter a valid search term.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchComponent, \"oRnKvO80BVy/i/4SLRr9ghbVF/o=\");\n_c = SearchComponent;\nexport default SearchComponent;\nvar _c;\n$RefreshReg$(_c, \"SearchComponent\");","map":{"version":3,"names":["React","useState","Button","Form","jsxDEV","_jsxDEV","SearchComponent","props","_s","searchValue","setSearchValue","isValid","setIsValid","handleSearch","trim","id","children","className","Control","type","placeholder","value","onChange","event","target","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","Feedback","_c","$RefreshReg$"],"sources":["/home/jaimin/Pictures/G2B1_RJS_GradedAssignment3-main/G1_ReactJS_glProject3/movie-manager/src/components/SearchComponent.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst SearchComponent = (props) => {\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [isValid, setIsValid] = useState(true);\r\n\r\n  const handleSearch = () => {\r\n    // Perform validation here\r\n    if (searchValue.trim() === '') {\r\n      setIsValid(false);\r\n    } else {\r\n      // Reset validation state\r\n      setIsValid(true);\r\n      // Pass the search value to the parent component\r\n      props.handleSearch(searchValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='searchBar'>\r\n      <Form className=\"d-flex\">\r\n        <Form.Control\r\n          type=\"search\"\r\n          placeholder=\"Search\"\r\n          className={`me-2 ${isValid ? '' : 'is-invalid'}`}\r\n          aria-label=\"Search\"\r\n          value={searchValue}\r\n          onChange={(event) => {\r\n            setSearchValue(event.target.value);\r\n            setIsValid(true); // Reset validation state on input change\r\n          }}\r\n        />\r\n        <Button variant=\"dark\" onClick={handleSearch}>\r\n          Search\r\n        </Button>\r\n        {!isValid && (\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Please enter a valid search term.\r\n          </Form.Control.Feedback>\r\n        )}\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,eAAe,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMY,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA,IAAIJ,WAAW,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC7BF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,MAAM;MACL;MACAA,UAAU,CAAC,IAAI,CAAC;MAChB;MACAL,KAAK,CAACM,YAAY,CAACJ,WAAW,CAAC;IACjC;EACF,CAAC;EAED,oBACEJ,OAAA;IAAKU,EAAE,EAAC,WAAW;IAAAC,QAAA,eACjBX,OAAA,CAACF,IAAI;MAACc,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACtBX,OAAA,CAACF,IAAI,CAACe,OAAO;QACXC,IAAI,EAAC,QAAQ;QACbC,WAAW,EAAC,QAAQ;QACpBH,SAAS,EAAG,QAAON,OAAO,GAAG,EAAE,GAAG,YAAa,EAAE;QACjD,cAAW,QAAQ;QACnBU,KAAK,EAAEZ,WAAY;QACnBa,QAAQ,EAAGC,KAAK,IAAK;UACnBb,cAAc,CAACa,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC;UAClCT,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;QACpB;MAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFvB,OAAA,CAACH,MAAM;QAAC2B,OAAO,EAAC,MAAM;QAACC,OAAO,EAAEjB,YAAa;QAAAG,QAAA,EAAC;MAE9C;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACR,CAACjB,OAAO,iBACPN,OAAA,CAACF,IAAI,CAACe,OAAO,CAACa,QAAQ;QAACZ,IAAI,EAAC,SAAS;QAAAH,QAAA,EAAC;MAEtC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuB,CACxB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACpB,EAAA,CAzCIF,eAAe;AAAA0B,EAAA,GAAf1B,eAAe;AA2CrB,eAAeA,eAAe;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}